syntax = "proto3";

option csharp_namespace = "Uncy.Model.Api";

package chessengine;

// Basic chess engine service for testing gRPC connection
service ChessEngineService {
  // Simple health check method
  rpc Ping (PingRequest) returns (PingResponse);
  
  // Basic engine status method
  rpc GetEngineStatus (EngineStatusRequest) returns (EngineStatusResponse);
  
  // Check if a move is legal and return the resulting position
  rpc IsMoveLegal (IsMoveLegalRequest) returns (IsMoveLegalResponse);
}

// Request/Response messages for Ping
message PingRequest {
  string message = 1;
}

message PingResponse {
  string message = 1;
  int64 timestamp = 2;
}

// Request/Response messages for Engine Status
message EngineStatusRequest {
}

message EngineStatusResponse {
  string engine_name = 1;
  string version = 2;
  bool is_ready = 3;
}

// Request/Response messages for IsMoveLegal
message IsMoveLegalRequest {
  string fen = 1;
  int32 origin_file = 2;  // x-coordinate of origin square
  int32 origin_rank = 3;  // y-coordinate of origin square
  int32 target_file = 4;  // x-coordinate of target square
  int32 target_rank = 5;  // y-coordinate of target square
}

message IsMoveLegalResponse {
  bool is_legal = 1;
  string resulting_fen = 2;  // The new FEN after the move (if legal)
  string error_message = 3;  // Error description if move is illegal
} 